#!/bin/zsh

#####################################################################
# This file contains several functions that can be run as tasks
#
# In order to run them easily, do:
# > source taskfile
#
# After sourcing the script you can run each task by its name, for example:
# > help
#####################################################################

# Fail if exit code is not zero, in pipes, and also if variable is not set
# See: https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -euo pipefail

function create_projects() {
  total_count=0
  generated_count=0

  for f in $(find . -name 'project.yml' | sort -n); do
    # Only create the project if it is not there already
    directory=$(dirname "$f")
    xcodeproj_files=$(find "$directory" -maxdepth 1 -name "*.xcodeproj")
    if [ -z "$xcodeproj_files" ]; then
      xcodegen --spec "$f"
      ((++generated_count))
    fi
    ((++total_count))
  done

  echo "✨ Done"
  echo "✨ Number of 'project.yml' files detected: ${total_count}"
  echo "✨ Number of projects generated: ${generated_count}"
}

function setup() {
  echo "✨ Install project dependencies"
  mint install yonaskolb/XcodeGen@2.14.0

  echo "✨ Setup project"
  create_projects
}

function test() {
  xcodebuild test -project All.xcodeproj -scheme All -destination 'platform=iOS Simulator,name=iPhone 8,OS=latest'
}

function help() {
  echo -n "The available tasks are: "
  # Approach inspired by https://stackoverflow.com/a/2641911
  grep "^function" taskfile | sed -e 's/function //g' | sed -e 's/() {//g' | xargs | sed -e 's/ /, /g'
}
