load("@build_bazel_rules_apple//apple:ios.bzl", "ios_application")
load("@build_bazel_rules_ios//rules:framework.bzl", "apple_framework")
load("@build_bazel_rules_ios//rules:test.bzl", "ios_unit_test")
load("//{{global.bazelConfig}}:config.bzl", "swift_copts", "resource_extensions")

##########################
# Main module rules
##########################

apple_framework(
  name = "{{module.name}}",
  srcs = glob(["src/main/swift/**/*.swift"]),
  deps = [
    {% for dependency in module.dependencies.main|expand %}
    {% if dependency.kind == "firstParty" %}
    "//{{dependency.path|rr}}:{{dependency.name}}",
    {% elif dependency.kind == "thirdParty" %}
    "//{{global.bazelConfig}}:{{dependency.name}}",
    {% endif %}
    {% endfor %}
  ],
  swift_copts = swift_copts(),
  data = glob(
    ["src/main/resources"]
    + ["src/main/swift/**/*." + x for x in resource_extensions]
  ),
  visibility = ["//visibility:public"],
)
{% if "App" in module.name %}

ios_application(
  name = "{{module.name}}Bundle",
  bundle_id = "{{global.bundleIdPrefix}}.{{module.name}}",
  families = ["iphone", "ipad",],
  infoplists = ["SupportingFiles/Info.plist"],
  minimum_os_version = "{{global.minimumDeploymentTarget}}",
  deps = ["{{module.name}}"],
  visibility = ["//visibility:public"],
)
{% endif %}

##########################
# Unit test rules
##########################

apple_framework(
  name = "{{module.name}}TestsLib",
  srcs = glob(["src/test/swift/**/*.swift"]),
  deps = [
    ":{{module.name}}",
    {% for dependency in module.dependencies.test|expand %}
    {% if dependency.kind == "firstParty" %}
    "//{{dependency.path|rr}}:{{dependency.name}}",
    {% elif dependency.kind == "thirdParty" %}
    "//{{global.bazelConfig}}:{{dependency.name}}",
    {% endif %}
    {% endfor %}
  ],
  data = glob(
    ["src/test/resources"]
    + ["src/test/swift/**/*." + x for x in resource_extensions]
  ),
  swift_copts = swift_copts(),
)

ios_unit_test(
  name = "{{module.name}}Tests",
  deps = [":{{module.name}}TestsLib"],
  minimum_os_version = "{{global.minimumDeploymentTarget}}",
  {% if "App" in module.name %}
  test_host = ":{{module.name}}Bundle",
  {% else %}
  test_host = "//{{global.bazelConfig}}:HostApp", # Needed to make UIScreen available for snapshots: to be able to obtain the screen size and scale
  {% endif %}
  tags = ["no-sandbox"], # Needed for the snapshot tests to be able to access the reference images
  runner = "//{{global.bazelConfig}}:test_runner",
)
